{"version":3,"sources":["features/Header/Header.js","features/Footer/Footer.js","features/Hero/Hero.js","features/About/About.js","reducers/blogReducer.js","reducers/blogPageReducer.js","features/HomePost/HomePost.js","page/HomePage/HomePage.js","page/BlogPage/BlogPage.js","page/BlogEditPage/BlogEditPage.js","features/Filter/Filter.js","page/Blogs/Blogs.js","page/Login/Login.js","features/ComingSoon/ComingSoon.js","page/Gallery/Gallery.js","page/Contact/Contact.js","App.js","app/store.js","index.js"],"names":["Header","className","to","pathname","hash","smooth","Footer","Hero","About","id","src","alt","getBlogPosts","createAsyncThunk","a","axios","then","res","data","blogReducer","createSlice","name","initialState","blogPost","sortedPost","category","reducers","sortByCategory","state","action","payload","filter","post","sortByDateCentral","sort","b","updatedAt","extraReducers","pending","status","fulfilled","rejected","selectBlogPost","actions","getUpdatedPost","blogPageReducer","coverImage","blogImage","title","blogContent","createdAt","setActiveBlog","clearActiveBlog","selectActiveBlog","blogPage","HomePost","dispatch","useDispatch","posts","useSelector","history","useHistory","useState","workout","setWorkout","investing","setInvesting","business","setBusiness","coding","setCoding","returnThreeForEachCategory","setSomething","filterCategory","splice","useEffect","dispatchData","changeRoutePath","link","push","length","map","onClick","lastModified","_id","toLocaleString","HomePage","BlogPage","activeBlog","useParams","setTimeout","block","index","type","imageLink","value","localStorage","getItem","window","fetch","method","BlogEditPage","handleRemoveClick","e","contentCopy","content","setContent","coverImageLink","setCoverImageLink","blogImageLink","setBlogImageLink","setTitle","activeBlogCopy","JSON","parse","stringify","htmlFor","onChange","formData","FormData","append","target","files","body","json","placeholder","item","autofocus","TextareaAutosize","handleParagraphChange","catch","err","console","log","finally","handleImageChange","newImage","newPara","headers","accessKey","Filter","getCategory","setCategory","sortByDate","setSortByDate","Blogs","blog","openCategoryWindow","setOpenCategoryWindow","createPost","charAt","toUpperCase","slice","Login","email","setEmail","password","setPassword","onSubmit","preventDefault","setItem","token","error","removeItem","ComingSoon","Gallery","Contact","App","path","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","reducer","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.5e08a2ac.chunk.js","sourcesContent":["import React from 'react';\nimport \"./Header.css\";\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\nimport { HashLink } from \"react-router-hash-link\";\n\n\nfunction Header() {\n    return (\n        <div className=\"header\">\n            <div className=\"header__choiceSection\">\n                <HashLink to={{ pathname: \"/\", hash: \"#about\" }} smooth className=\"header__choice\">About</HashLink>\n                \n                <HashLink to={{ pathname: \"/blogs\" }} className=\"header__choice\">Posts</HashLink>\n            </div>\n\n            <div className=\"header__logo\">\n                <AllInclusiveIcon />\n            </div>\n\n            <div className=\"header__choiceSection\">\n                <HashLink to={{ pathname: \"/gallery\" }} className=\"header__choice\">Gallery</HashLink>\n                <HashLink to={{ pathname: \"/contact\" }} className=\"header__choice\">Contact</HashLink>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react';\nimport \"./Footer.css\";\n\nfunction Footer() {\n    return (\n        <div className=\"footer\">\n            <p>© <span>Juncheng</span> blog</p>\n        </div>\n    )\n}\n\nexport default Footer\n","import React from 'react';\nimport \"./Hero.css\";\n\nfunction Hero() {\n    return (\n        <div className=\"hero\">\n            <div className=\"hero__welcome\">\n                <p>Welcome to my blog</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Hero\n","import React from 'react';\nimport \"./About.css\";\n\nfunction About() {\n    return (\n        <div className=\"about\" id=\"about\">\n            <h5 className=\"about__title\">About <span>Me</span></h5>\n            <div className=\"about__box\">\n                <img src=\"https://res.cloudinary.com/dfeh7lczz/image/upload/v1626851587/juncheng_ae6i23.jpg\" \n                alt=\"juncheng\" className=\"about__image\" />\n                <div className=\"about__text\">\n                    <ul className=\"about__textGroupA\">\n                        <li className=\"about__textGroupAChild\">Juncheng.</li>\n                        <li className=\"about__textGroupAChild\">A web-developer and business-developer.</li>\n                        <li className=\"about__textGroupAChild\">Business major with specialization in Banking and Finance.</li>\n                    </ul>\n                    <p className=\"about__textGroupB\">Workout • Coding • Investing • Business</p>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default About\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from \"axios\"\n// import { persistor } from 'store';\n\n\nconst initialState = {\n  blogPost: [],\n  sortedPost: [],\n  category: \"\",\n}\n\nexport const getBlogPosts = createAsyncThunk(\n    'blogPost/getBlogFromDatabase',\n    async () => {\n      return axios(\"/blog\")\n                .then(res => res.data)\n    }\n)\n\nconst blogReducer = createSlice({\n    name: \"blog\",\n    initialState,\n    reducers: {\n      sortByCategory: (state, action) => {\n        if (action.payload === \"all\") {\n          state.sortedPost = state.blogPost\n          state.category = \"\";\n        } else {\n          state.sortedPost = state.blogPost.filter(post => post.category === action.payload)\n          state.category = action.payload\n        }\n      },\n      sortByDateCentral: (state, action) => {\n        if (action.payload === \"latest\") {\n          state.sortedPost.sort((a, b) => (a.updatedAt < b.updatedAt ? 1 : -1));\n        } else if (action.payload === \"oldest\") {\n          state.sortedPost.sort((a, b) => (a.updatedAt > b.updatedAt ? 1 : -1));\n        }\n      }\n    },\n    extraReducers: {\n        [getBlogPosts.pending]: ( state, action ) => {\n          state.status = \"loading\"\n        },\n  \n        [getBlogPosts.fulfilled]: ( state, { payload } ) => {\n          if (payload) {\n            state.blogPost = payload.sort((a, b) => (a.updatedAt < b.updatedAt ? 1 : -1));\n            state.sortedPost = payload.sort((a, b) => (a.updatedAt < b.updatedAt ? 1 : -1));\n            state.status = \"success\"\n          }\n        },\n  \n        [getBlogPosts.rejected]: ( state, action ) => {\n          state.status = \"failed\"\n        }\n      }\n});\n\nexport const selectBlogPost = state => state.blogPost\nexport const { sortByCategory, sortByDateCentral } = blogReducer.actions\nexport default blogReducer.reducer","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from \"axios\";\n\nconst initialState = {\n    coverImage: \"\",\n    blogImage: \"\",\n    title: \"\",\n    blogContent: [],\n    createdAt: null,\n    updatedAt: null,\n}\n\nexport const getUpdatedPost = createAsyncThunk(\n    'blogPost/getUpdatedPostFromDatabase',\n    async (id) => {\n      return axios(`/blog/${id}`)\n                .then(res => res.data)\n    }\n  )\n\nconst blogPageReducer = createSlice({\n    name: \"blogPage\",\n    initialState,\n    reducers: {\n        setActiveBlog: ( state, action ) => {\n            state.coverImage = action.payload.coverImage;\n            state.blogImage = action.payload.blogImage;\n            state.title = action.payload.title;\n            state.blogContent = action.payload.blogContent;\n            state.createdAt = action.payload.createdAt;\n            state.updatedAt = action.payload.updatedAt;\n            // console.log(Object.isFrozen(state.blogContent))\n        },\n        clearActiveBlog: ( state, action ) => {\n            state.coverImage = \"\";\n            state.blogImage = \"\";\n            state.title = \"\";\n            state.blogContent = [];\n            state.createdAt = null;\n            state.updatedAt = null;\n        }\n    },\n    extraReducers: {\n        [getUpdatedPost.fulfilled]: (state, action) => {\n            state.coverImage = action.payload.coverImage;\n            state.blogImage = action.payload.blogImage;\n            state.title = action.payload.title;\n            state.blogContent = action.payload.blogContent;\n            state.createdAt = action.payload.createdAt;\n            state.updatedAt = action.payload.updatedAt;\n            // console.log(Object.isFrozen(state.blogContent))\n        }\n    }\n});\n\nexport const selectActiveBlog = state => state.blogPage\nexport const { setActiveBlog, clearActiveBlog } = blogPageReducer.actions\nexport default blogPageReducer.reducer","import React, { useEffect, useState } from 'react';\nimport \"./HomePost.css\";\nimport { HashLink } from \"react-router-hash-link\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { getBlogPosts, selectBlogPost } from \"../../reducers/blogReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setActiveBlog } from \"../../reducers/blogPageReducer\"\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\n\n\nfunction HomePost() {\n\n    const dispatch = useDispatch();\n    const posts = useSelector(selectBlogPost)\n    const history = useHistory();\n\n    // application state\n    const [workout, setWorkout] = useState([])\n    const [investing, setInvesting] = useState([])\n    const [business, setBusiness] = useState([])\n    const [coding, setCoding] = useState([])\n\n    const returnThreeForEachCategory = (setSomething, category) => {\n        let filterCategory = posts.blogPost.filter(post => post.category === category)\n        let copyFilter = [...filterCategory]\n        let selectThreeOnly = copyFilter.splice(0, 3)\n        return setSomething(selectThreeOnly)\n    }\n\n    useEffect(() => {\n        async function dispatchData() {\n            dispatch(getBlogPosts());\n            returnThreeForEachCategory(setWorkout, \"workout\")\n            returnThreeForEachCategory(setInvesting, \"investing\")\n            returnThreeForEachCategory(setBusiness, \"business\")\n            returnThreeForEachCategory(setCoding, \"coding\")\n            // setWorkout(posts.blogPost.filter(post => post.category === \"workout\"))\n            // setInvesting(posts.blogPost.filter(post => post.category === \"investing\"))\n            // setBusiness(posts.blogPost.filter(post => post.category === \"business\"))\n            // setCoding(posts.blogPost.filter(post => post.category === \"coding\"))\n        }\n        dispatchData()\n    }, [dispatch]);\n\n    const changeRoutePath = (link) => {\n        history.push(link);\n    }\n\n    \n    return (\n        <div className=\"homePost\">\n            <div className=\"homePost__section\">\n                <h1>Workout</h1>\n                <div className=\"homePost__posts\">\n                    {\n                        workout && (workout.length > 0)\n                        ?\n                        workout.map(post => (\n                    \n                            (\n\n                                <div onClick={() => { dispatch(setActiveBlog({\n                                    coverImage: post.coverImage,\n                                    blogImage: post.blogImage,\n                                    title: post.title,\n                                    blogContent: post.blogContent,\n                                    lastModified: post.lastModified\n                                })); \n                                changeRoutePath(`/blog-page/${post._id}`) }} \n                                className=\"homePost__post\" key={post._id}>\n                                    <img src={post.blogImage} \n                                    alt={post.title} className=\"homePost__image\" />\n                                    <div className=\"homePost__postText\">\n                                        <p className=\"homePost__postTitle\">{post.title}</p>\n                                        <p className=\"homePost__postDate\">{post.createdAt.toLocaleString()}</p>\n                                    </div>\n                                </div>\n                            )\n                            \n                        ))\n                        :\n                        <p>Coming Soon</p>\n                    }\n                </div>\n            </div>\n            \n            <div className=\"homePost__section\">\n                <h1>Coding</h1>\n                <div className=\"homePost__posts\">\n                {\n                        coding && (coding.length > 0)\n                        ?\n                        coding.map(post => (\n                            \n                            (\n\n                                <div onClick={() => { dispatch(setActiveBlog({\n                                    coverImage: post.coverImage,\n                                    blogImage: post.blogImage,\n                                    title: post.title,\n                                    blogContent: post.blogContent,\n                                    lastModified: post.lastModified\n                                })); \n                                changeRoutePath(`/blog-page/${post._id}`) }} \n                                className=\"homePost__post\" key={post._id}>\n                                    <img src={post.blogImage} \n                                    alt={post.title} className=\"homePost__image\" />\n                                    <div className=\"homePost__postText\">\n                                        <p className=\"homePost__postTitle\">{post.title}</p>\n                                        <p className=\"homePost__postDate\">{post.createdAt.toLocaleString()}</p>\n                                    </div>\n                                </div>\n                            )\n                            \n                        ))\n                        :\n                        <p>Coming Soon</p>\n                    }\n                </div>\n            </div>\n\n            <div className=\"homePost__section\">\n                <h1>Investing</h1>\n                <div className=\"homePost__posts\">\n                {\n                        investing && (investing.length > 0)\n                        ?\n                        investing.map(post => (\n                    \n                            (\n\n                                <div onClick={() => { dispatch(setActiveBlog({\n                                    coverImage: post.coverImage,\n                                    blogImage: post.blogImage,\n                                    title: post.title,\n                                    blogContent: post.blogContent,\n                                    lastModified: post.lastModified\n                                })); \n                                changeRoutePath(`/blog-page/${post._id}`) }} \n                                className=\"homePost__post\" key={post._id}>\n                                    <img src={post.blogImage} \n                                    alt={post.title} className=\"homePost__image\" />\n                                    <div className=\"homePost__postText\">\n                                        <p className=\"homePost__postTitle\">{post.title}</p>\n                                        {/* <p className=\"homePost__postDate\">{post.createdAt.toLocaleString()}</p> */}\n                                    </div>\n                                </div>\n                            )\n                            \n                        ))\n                        :\n                        <p>Coming Soon</p>\n                    }\n                </div>\n            </div>\n\n            <div className=\"homePost__section\">\n                <h1>Business</h1>\n                <div className=\"homePost__posts\">\n                {\n                        business && (business.length > 0)\n                        ?\n                        business.map(post => (\n                            \n                            (\n\n                                <div onClick={() => { dispatch(setActiveBlog({\n                                    coverImage: post.coverImage,\n                                    blogImage: post.blogImage,\n                                    title: post.title,\n                                    blogContent: post.blogContent,\n                                    lastModified: post.lastModified\n                                })); \n                                changeRoutePath(`/blog-page/${post._id}`) }} \n                                className=\"homePost__post\" key={post._id}>\n                                    <img src={post.blogImage} \n                                    alt={post.title} className=\"homePost__image\" />\n                                    <div className=\"homePost__postText\">\n                                        <p className=\"homePost__postTitle\">{post.title}</p>\n                                        <p className=\"homePost__postDate\">{post.createdAt.toLocaleString()}</p>\n                                    </div>\n                                </div>\n                            )\n                            \n                        ))\n                        :\n                        <p>Coming Soon</p>\n                    }\n                </div>\n            </div>\n                <HashLink to=\"#\" smooth><ArrowDropUpIcon className=\"homePost__upButton\"/></HashLink>\n\n        </div>\n    )\n}\n\nexport default HomePost\n","import React from 'react';\nimport Hero from \"../../features/Hero/Hero\";\nimport About from \"../../features/About/About\";\nimport HomePost from \"../../features/HomePost/HomePost\";\n\nfunction HomePage() {\n    return (\n        <div>\n            <Hero />\n            <About />\n            <hr></hr>\n            <HomePost />\n        </div>\n    )\n}\n\nexport default HomePage\n","import React, { useEffect } from 'react';\nimport \"./BlogPage.css\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUpdatedPost, selectActiveBlog, clearActiveBlog } from '../../reducers/blogPageReducer';\nimport { useHistory, useParams, Link } from 'react-router-dom';\n\n\nfunction BlogPage() {\n\n    const dispatch = useDispatch();\n    const activeBlog = useSelector(selectActiveBlog);\n    const history = useHistory();\n\n    const changeRoutePath = (link) => {\n        history.push(link);\n    }\n\n    const { id } = useParams()\n\n    useEffect(() => {\n        dispatch(getUpdatedPost(id))\n        setTimeout(function() { \n            dispatch(getUpdatedPost(id))\n        }, 1000)\n    }, [])\n\n    const deletePost = () => {\n        window.fetch(`/blog/${id}`, {\n            method: \"DELETE\",\n        })\n        .then(() => {\n            clearActiveBlog()\n            changeRoutePath(\"/blogs\")\n        })\n    }\n\n    \n    return (\n        <div className=\"blogPage\">\n            <div className=\"blogPage__box\">\n\n\n            {/* blog top */}\n            <div className=\"blogTop\">\n                <div className=\"blogTop__imageCover\">\n                    <img src={ activeBlog.coverImage } alt={ activeBlog.title } className=\"blogTop__bannerImage\" />\n                </div>\n                <img src={ activeBlog.blogImage } alt={ activeBlog.title } className=\"blogTop__blogImage\" />\n            </div>\n\n            {/* blog content */}\n            <div className=\"blogContent\">\n                \n                <div className=\"blogContent__title\">\n                    <h1>{ activeBlog.title }</h1>\n                </div>\n                <div className=\"blogContent__subInfo\">\n                    <p className=\"blogContent__author\">by: Juncheng</p>\n                    <p className=\"blogContent__date\">{ activeBlog.updatedAt }</p>\n                </div>\n                {\n                    activeBlog.blogContent.map( (block, index) => {\n                        if (block.type === \"file\") {\n                            return (\n                                <div key={index} className=\"blockContent__imageContainer\">\n                                    <img className=\"blockContent__image\" src={block.imageLink} />   \n                                </div>\n                            )\n                        } else {\n                            return (\n                                <div className=\"blogContent__content\" key={index}>\n                                    <pre className=\"blogContent__paragraph\">{ block.value }</pre>\n                                </div>\n                            )\n                        }\n                    } )\n                }\n                {/* <Link to=\"/blogs\" className=\"blogContent__seeMoreButtonContainer\"> */}\n                    <Link to=\"/blogs\" className=\"blogContent__seeMoreButton\">More Posts</Link>\n                {/* </Link> */}\n                {\n                    !localStorage.getItem(\"authToken\")\n                    ?\n                    null\n                    :\n                    <div className=\"blogContent__bottomButtonGroup\">\n                        <button className=\"blogContent__bottomButton\" onClick={() => changeRoutePath(`/blog-page-edit/${id}`)}>Edit</button>\n                        <button className=\"blogContent__bottomButton\" onClick={deletePost}>Delete</button>\n                    </div>\n                }\n            </div>\n            </div>\n\n        </div>\n        \n    )\n}\n\nexport default BlogPage\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { selectActiveBlog } from '../../reducers/blogPageReducer';\nimport \"./BlogEditPage.css\";\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\n\n\nfunction BlogEditPage() {\n\n    const handleParagraphChange = (e, index) => {\n        let { value } = e.target;\n        let contentCopy = [...content];\n        contentCopy[index].value = value;\n        setContent(contentCopy);\n      };\n\n    const handleAddParagraph = () => {\n        let newPara = { type: \"text\", value: \"\", id: content.length + 1 }\n        setContent([...content, newPara]);\n    };\n\n    const handleImageChange = (e, index) => {\n        let contentCopy = [...content];\n        let formData = new FormData();\n        formData.append('image', e.target.files[0])\n        window.fetch(`/blog/${id}/images`, {\n            method: \"POST\",\n            body: formData\n        })\n        .then(res => res.json())\n        .then(data => contentCopy[index][\"imageLink\"] = data.imageLink)\n        .catch(err => console.log(err))\n        .finally(() => setContent(contentCopy))\n      };\n\n    const handleRemoveClick = (e, index) => {\n        let contentCopy = [...content];\n        contentCopy.splice(index, 1);\n        setContent(contentCopy);\n    };\n\n    const handleAddImage = () => {\n        let newImage = { type: \"file\", id: content.length + 1, imageLink: \"\" }\n        setContent([...content, newImage]);\n    };\n\n\n    // application state\n    const [coverImageLink, setCoverImageLink] = useState(null);\n    const [blogImageLink, setBlogImageLink] = useState(null);\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState([]);\n\n    // define hooks\n    const { id } = useParams()\n    const history = useHistory();\n    const activeBlog = useSelector(selectActiveBlog);\n\n    // useEffect\n    useEffect(() => {\n        var activeBlogCopy = JSON.parse(JSON.stringify(activeBlog));\n        setTitle(activeBlogCopy.title);\n        setContent(activeBlogCopy.blogContent)\n    }, []);\n\n    // application functions\n    const changeRoutePath = (link) => {\n        history.push(link);\n    }\n\n    const onSelectCoverImage = e => {\n        var formData = new FormData();\n        formData.append(\"coverImage\", e.target.files[0]);\n        window.fetch(`/blog/${id}/cover-image`, {\n            method: \"POST\",\n            body: formData\n        })\n        .then(res => res.json())\n        .then(data => setCoverImageLink(data.imageLink))\n    }\n\n    const onSelectedBlogImage = e => {\n        var formData = new FormData();\n        formData.append(\"blogImage\", e.target.files[0]);\n        window.fetch(`/blog/${id}/blog-image`, {\n            method: \"POST\",\n            body: formData\n        })\n        .then(res => res.json())\n        .then(data => setBlogImageLink(data.imageLink))\n    }\n\n    const handleSaveChange = () => {\n        let blogPage = {\n            title: title,\n            coverImage: coverImageLink,\n            blogImage: blogImageLink,\n            blogContent: content\n        }\n        window.fetch(`/blog/${id}`, {\n            method: \"PATCH\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(blogPage)\n        })\n        .then(res => res.json())\n        .then(data => console.log(data))\n        .finally(() => {\n            setTitle(\"\");\n            setContent([]);\n            setCoverImageLink(\"\")\n            setBlogImageLink(\"\")\n            changeRoutePath(`/blog-page/${id}`)\n        })\n    }\n    \n    return (\n        <div className=\"blogEditPage__container\">\n            {/* blog top edit */}\n            <div className=\"blogTop\">\n                <div className=\"blogTop__imageCover\">\n                    <div className=\"blogTop__bannerCover\">\n                        <img src={ coverImageLink ? coverImageLink : activeBlog.coverImage } alt={ activeBlog.title } className=\"blogTop__bannerImage\" />\n                        <label className=\"blogTop__EditInstruction\" htmlFor=\"coverImage\">\n                            Click to edit\n                        </label>\n                        <input id=\"coverImage\" className=\"blogTop__coverImageInput\" type=\"file\" onChange={onSelectCoverImage} />\n                    </div>\n                </div>\n                <div className=\"blogTop__bannerCover\">\n                    <img src={ blogImageLink ? blogImageLink : activeBlog.blogImage } alt={ activeBlog.title } className=\"blogTop__blogImage\" />\n                    <label className=\"blogTop__EditInstruction\" htmlFor=\"blogImage\">\n                        Click to edit\n                    </label>\n                    <input id=\"blogImage\" className=\"blogTop__coverImageInput\" type=\"file\" onChange={onSelectedBlogImage} />\n                </div>\n            </div>\n\n            {/* blog content edit */}\n            <div className=\"blogContent\">\n                <div className=\"blogContent__title\">\n                    <input type=\"text\" onChange={e => setTitle(e.target.value)} value={title}\n                    className=\"blogContent__editTitle\" placeholder=\"Your title here...\" />\n                </div>\n                <div className=\"blogContent__subInfo\">\n                    <p className=\"blogContent__author\">by: Juncheng</p>\n                    <p className=\"blogContent__date\">{ activeBlog.updatedAt }</p>\n                </div>\n                <div className=\"blogContent__content\">\n                    {\n                        content && content.length > 0\n                        ?\n                        content.map((item, index) => {\n                            if (item.type === \"text\") {\n                                return (\n                                    <div key={index} className=\"blogEditPage__addText\" autofocus>\n                                        <TextareaAutosize\n                                            value={item.value}\n                                            onChange={(e) => handleParagraphChange(e, index)}\n                                            type=\"text\"\n                                            className=\"blogEditPage__blog\"\n                                            id={index}\n                                        />\n                                        <button className=\"blogEditPage__removeButton\" onClick={e => handleRemoveClick(e, index)}>Remove</button>\n                                    </div>\n                                )\n                            } else if (item.type === \"file\") {\n                                return (\n                                <div className=\"blogEditPage__addImage\" key={index}>\n                                    <img \n                                    src={item.imageLink ? item.imageLink : null} \n                                    className=\"blogEditPage__contentImage\"\n                                    />\n                                    <div className=\"blogEditPage__imageInputButtons\"> \n                                        <label htmlFor={index} \n                                        className=\"blogEditPage__imageInputLabel\">Select Image</label>\n                                        <input\n                                        onChange={ e => handleImageChange(e, index) }\n                                        type=\"file\"\n                                        id={index}\n                                        className=\"blogEditPage__imageInput\"\n                                        />\n                                        <button className=\"blogEditPage__removeButton\" onClick={e => handleRemoveClick(e, index)}>Remove</button>\n                                    </div>\n                                </div>\n                                );\n                            }\n                        })\n                        :\n                        null\n                    }\n                </div>\n                <div className=\"blogContent__addElementButtons\">\n                    <button onClick={handleAddImage} className=\"blogEditPage__addElementButton\">Add Image</button>\n                    <button onClick={handleAddParagraph} className=\"blogEditPage__addElementButton\">Add Paragraph</button>\n                </div>\n                <button className=\"blogContent__editButton\" onClick={handleSaveChange} accessKey=\"s\">\n                    Save and Preview\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default BlogEditPage\n","import React, { useState } from 'react';\nimport \"./Filter.css\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { sortByCategory, sortByDateCentral } from '../../reducers/blogReducer';\n\nfunction Filter({ getCategory }) {\n\n    // hooks\n    const dispatch = useDispatch();\n\n    // application state\n    const [category, setCategory] = useState(\"all\");\n    const [sortByDate, setSortByDate] = useState(\"latest\");\n\n    // application function\n    const handleCategoryChange = e => {\n        setCategory(e.target.value)\n        getCategory(e.target.value)\n        dispatch(sortByCategory(e.target.value))\n    }\n\n    const handleSortByDateChange = e => {\n        setSortByDate(e.target.value)\n        dispatch(sortByDateCentral(e.target.value))\n    }\n\n    return (\n        <div className=\"filter\">\n            <select value={category} onChange={handleCategoryChange} className=\"filter__filters filter__category\">\n                <option value=\"all\">All</option>\n                <option value=\"workout\">Workout</option>\n                <option value=\"investing\">Investing</option>\n                <option value=\"business\">Business</option>\n                <option value=\"coding\">Coding</option>\n            </select>\n\n            <select value={sortByDate} onChange={handleSortByDateChange} className=\"filter__filters filter__sortByDate\">\n                <option value=\"latest\">Last Modified: Latest</option>\n                <option value=\"oldest\">Last Modified: Oldest</option>\n            </select>\n        </div>\n    )\n}\n\nexport default Filter\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Filter from \"../../features/Filter/Filter\";\nimport { setActiveBlog } from '../../reducers/blogPageReducer';\nimport { selectBlogPost, getBlogPosts } from '../../reducers/blogReducer';\nimport \"./Blogs.css\";\n\n\nfunction Blogs() {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const blog = useSelector(selectBlogPost);\n\n    const [category, setCategory] = useState(\"\");\n    const [openCategoryWindow, setOpenCategoryWindow] = useState(false);\n\n    const changeRoutePath = (link) => {\n        history.push(link);\n    }\n\n    useEffect(() => {\n        dispatch(getBlogPosts())\n    }, [])\n\n    const getCategory = category => {\n        setCategory(category)\n    }\n\n    const addPost = () => {\n        setOpenCategoryWindow(true);\n    }\n\n    const createPost = (e) => {\n        window.fetch('/blog', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                category: e.target.value\n            })\n        })\n        .then(res => res.json())\n        .then((data) => {\n            setActiveBlog(data.blog)\n            changeRoutePath(`/blog-page/${data.blog._id}`);\n        })\n    }\n\n\n    \n    return (\n        <div className=\"blogs\">\n            <div className=\"blogs__topSection\">\n                <h1 className=\"blogs__title\">Blogs</h1>\n                <Filter className=\"blogs__filter\" getCategory={getCategory} />\n            </div>\n            {\n                blog\n                ?\n                (category\n                ?\n                <h1 className=\"blogs__category\">{ blog.category.charAt(0).toUpperCase() + blog.category.slice(1) }</h1>\n                :\n                <h1 className=\"blogs__category\">All Post</h1>)\n                :\n                <h1>Coming Soon</h1>\n            }\n            <div className=\"blogs__postsSection\">\n\n                {\n                    blog\n                    ?\n                    blog.sortedPost.map(post => (\n                    \n                        (\n                            <div onClick={() => { dispatch(setActiveBlog({\n                                coverImage: post.coverImage,\n                                blogImage: post.blogImage,\n                                title: post.title,\n                                blogContent: post.blogContent,\n                                lastModified: post.lastModified\n                            })); \n                            changeRoutePath(`/blog-page/${post._id}`) }} \n                            className=\"blogs__post\" key={post._id}>\n                                <img src={post.blogImage} \n                                alt={post.title} className=\"blogs__postImage\" />\n                                <div className=\"blogs__postText\">\n                                    <p className=\"blogs__postTitle\">{post.title}</p>\n                                    {/* <p className=\"blogs__postDate\">{post.createdTime}</p> */}\n                                </div>\n                            </div>\n                        )\n                        \n                    ))\n                    :\n                    null\n                }\n\n                {\n                    openCategoryWindow\n                    ?\n                    <div className=\"blogs__addPostContainer\">\n                        <p className=\"blogs__cancelAddPost\" onClick={() => setOpenCategoryWindow(false)}>x</p>\n                        <h1>Create Posts</h1>\n                        <p>Select the <span>category</span> for your post</p>\n                        <div className=\"blogs__selectCategoryContainer\">\n                            <option onClick={e => createPost(e)} \n                            className=\"blogs__categoryOptions\" value=\"investing\">Investing</option>\n                            <option onClick={e => createPost(e)} \n                            className=\"blogs__categoryOptions\" value=\"business\">Business</option>\n                            <option onClick={e => createPost(e)}\n                            className=\"blogs__categoryOptions\" value=\"coding\">Coding</option>\n                            <option onClick={e => createPost(e)}\n                            className=\"blogs__categoryOptions\" value=\"workout\">Workout</option>\n                        </div>\n                    </div>\n                    :\n                    null\n                }\n            </div>\n            {\n                localStorage.getItem(\"authToken\")\n                ?\n                <button className=\"blogs__addPostButton\" onClick={addPost}>Add Post</button>\n                :\n                null\n            }\n        </div>\n    )\n}\n\nexport default Blogs\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nfunction Login() {\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const history = useHistory()\n\n    const handleLoginSubmit = (e) => {\n        e.preventDefault();\n        try {\n            window.fetch(\"/user/login\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    email: email,\n                    password: password\n                })\n            })\n            .then(res => res.json())\n            // .then(token => console.log(token))\n            .then(data => localStorage.setItem(\"authToken\", data.token))\n            .finally(() => history.push('/'))\n            \n            // history.push(\"/\");\n          } catch (error) {\n              console.log(error)\n            // setError(error.response.data.error);\n            // setTimeout(() => {\n            //   setError(\"\");\n            // }, 5000);\n          }\n        };\n\n        const handleLogout = () => {\n            localStorage.removeItem(\"authToken\")\n            history.push(\"/\")\n        }\n    \n    \n    return (\n        <div className=\"login\">\n            {\n                !localStorage.getItem(\"authToken\")\n                ?\n                <form onSubmit={handleLoginSubmit}>\n                    <label htmlFor=\"email\">Email</label>\n                    <input id=\"email\" name=\"email\" onChange={e => setEmail(e.target.value)} />\n\n                    <label htmlFor=\"password\">Password</label>\n                    <input id=\"password\" name=\"password\" type=\"password\" onChange={e => setPassword(e.target.value)}/>\n\n                    <button type=\"submit\">Login</button>\n                    \n                </form>\n                :\n                null\n            }\n            {\n            localStorage.getItem(\"authToken\")\n            ?\n            <button onClick={handleLogout}>Logout</button>\n            :\n            null\n            }\n        </div>\n    )\n}\n\nexport default Login\n","import React from 'react'\nimport \"./ComingSoon.css\";\n\nfunction ComingSoon() {\n    return (\n      <div className=\"comingSoon\">\n        <div className=\"container\">\n          <h1>\n            <br />\n            Coming Soon\n          </h1>\n        </div>\n      </div>\n    );\n  }\n  \n\nexport default ComingSoon\n","import React from 'react';\nimport ComingSoon from '../../features/ComingSoon/ComingSoon';\n\nfunction Gallery() {\n    return (\n        <div className=\"gallery\">\n            <ComingSoon />\n        </div>\n    )\n}\n\nexport default Gallery\n","import React from 'react'\nimport ComingSoon from '../../features/ComingSoon/ComingSoon'\n\nfunction Contact() {\n    return (\n        <div>\n            <ComingSoon />\n        </div>\n    )\n}\n\nexport default Contact\n","import React from 'react';\nimport './App.css';\nimport Header from \"./features/Header/Header\";\nimport Footer from \"./features/Footer/Footer\";\nimport {BrowserRouter as Router, Switch, Route, HashRouter} from \"react-router-dom\";\nimport HomePage from \"./page/HomePage/HomePage\";\nimport BlogPage from \"./page/BlogPage/BlogPage\";\nimport BlogPageEdit from \"./page/BlogEditPage/BlogEditPage\";\nimport Blogs from \"./page/Blogs/Blogs\";\n// import Tester from \"./page/Tester/Tester\"\nimport BlogContent from \"./features/BlogContent/BlogContent\"\nimport Login from \"./page/Login/Login\";\nimport Gallery from './page/Gallery/Gallery';\nimport Contact from \"./page/Contact/Contact\"\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Router>\n      <Header />\n        <Switch>\n          <Route path=\"/gallery\">\n            <Gallery />\n          </Route>\n          <Route path=\"/contact\">\n            <Contact />\n          </Route>\n          <Route path=\"/sign-in\">\n            <Login />\n            <Footer />\n          </Route>\n          <Route path=\"/blogs\">\n            <Blogs />\n            <Footer />\n          </Route>\n          <Route path=\"/blog-page-edit/:id\">\n            <BlogPageEdit />\n            <Footer />\n          </Route>\n          <Route path=\"/blog-page/:id\">\n            <BlogPage />\n            <Footer />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n            <Footer />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\nimport { combineReducers } from \"redux\"; \nimport blogReducer from \"../reducers/blogReducer\"\nimport blogPageReducer from \"../reducers/blogPageReducer\";\n\nconst reducers = combineReducers({\n  //...         \n  blogPost: blogReducer,\n  blogPage: blogPageReducer,\n });\n\n//  storage.removeItem('persist:root')\n\nconst persistConfig = {\n  key: 'root',\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nexport const store = configureStore({\n  reducer: persistedReducer\n});\n\n\n\n// export const store = configureStore({\n//   reducer: {\n//     blogPost: blogReducer,\n//     blogPage: blogPageReducer,\n//   }\n// });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n// import * as serviceWorker from './serviceWorker';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { persistStore } from 'redux-persist'\n\nlet persistor = persistStore(store);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}